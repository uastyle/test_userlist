{"version":3,"sources":["store.js","UserList.js","UserInfo.js","App.js","index.js"],"names":["userListSlice","createSlice","name","initialState","users","user","reducers","setUsers","state","action","console","log","payload","setUser","actions","configureStore","reducer","userList","UserList","useSelector","dispatch","useDispatch","actionSetUsers","useEffect","fetch","then","json","catch","Fragment","className","map","item","to","id","email","UserInfo","userInfo","actionSetUser","useParams","username","address","city","street","company","App","store","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAEaA,EAAgBC,YAAY,CACvCC,KAAM,WACNC,aAAc,CACVC,MAAO,GACPC,MAAM,GAEVC,SAAU,CACRC,SAAU,SAACC,EAAOC,GACdC,QAAQC,IAAIF,GACdD,EAAMJ,MAAQK,EAAOG,SAEvBC,QAAS,SAACL,EAAOC,GACfC,QAAQC,IAAIF,GACZD,EAAMH,KAAOI,EAAOG,YAMnB,EAA8BZ,EAAcc,QAApCP,EAAR,EAAQA,SAAUM,EAAlB,EAAkBA,QAEVE,cAAe,CAC5BC,QAAS,CACPC,SAAUjB,EAAcgB,W,OCgCbE,EAnDE,WACf,IAAMD,EAAWE,aAAY,SAACX,GAAD,OAAWA,EAAMS,SAASb,SACjDgB,EAAWC,cACXC,EAAiB,SAAClB,GAAD,OAAWgB,EAASb,EAASH,KAiBpD,OAfAmB,qBAAU,WACRC,MAAM,8CACLC,MAAM,SAACrB,GACN,OAAOA,EAAMsB,UAEdD,MAAM,SAACrB,GACNkB,EAAelB,MAEhBuB,OAAO,WACNL,EAAe,WAEhB,IAEHZ,QAAQC,IAAIM,GAEJ,eAAC,IAAMW,SAAP,WACE,uCAEEX,GACA,wBAAOY,UAAU,QAAjB,UACE,gCACE,+BACE,sCACA,4CAGJ,gCACEZ,EAASa,KAAI,SAACC,GAAD,OACb,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAE,gBAAWD,EAAKE,IAAxB,SACGF,EAAK7B,SAIV,6BAAK6B,EAAKG,UAPHH,EAAKE,YAcN,OAAbhB,GAAsB,oDCTpBkB,EArCE,WACf,IAAMC,EAAWjB,aAAY,SAACX,GAAD,OAAWA,EAAMS,SAASZ,QACjDe,EAAWC,cACXgB,EAAgB,SAACjC,GAAD,OAAWgB,EAASP,EAAQT,KAE1C6B,EAAOK,cAAPL,GAiBR,OAfAV,qBAAU,WACJU,GACFT,MAAM,8CAAD,OAA+CS,IACnDR,MAAM,SAACpB,GACN,OAAOA,EAAKqB,UAEbD,MAAM,SAACpB,GACNgC,EAAchC,MAEfsB,OAAO,WACNU,EAAc,WAGjB,IAEI,eAAC,IAAMT,SAAP,WACG,2CAECQ,GACC,qBAAIP,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,mBAAuCO,EAASlC,QAChD,qBAAI2B,UAAU,kBAAd,uBAA2CO,EAASG,YACpD,qBAAIV,UAAU,kBAAd,sBAA0CO,EAASI,QAAQC,KAA3D,KAAmEL,EAASI,QAAQE,UACpF,qBAAIb,UAAU,kBAAd,sBAA0CO,EAASO,QAAQzC,WAGjD,OAAbkC,GAAsB,oDC7BpB,SAASQ,IACtB,OACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAvB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,YAAZ,SACE,cAAC,EAAD,eCjBdE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACN,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.de8abeab.chunk.js","sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit'\n\nexport const userListSlice = createSlice({\n  name: 'userList',\n  initialState: {\n      users: [],\n      user: false,\n  },\n  reducers: {\n    setUsers: (state, action) => {\n        console.log(action)\n      state.users = action.payload\n    },\n    setUser: (state, action) => {\n      console.log(action)\n      state.user = action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setUsers, setUser } = userListSlice.actions\n\nexport default configureStore({\n  reducer: {\n    userList: userListSlice.reducer\n  },\n})","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { setUsers } from \"./store\";\n\nconst UserList = () => {\n  const userList = useSelector((state) => state.userList.users)\n  const dispatch = useDispatch()\n  const actionSetUsers = (users) => dispatch(setUsers(users))\n\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/users`)\n    .then( (users) => {\n      return users.json()\n    })\n    .then( (users) => {\n      actionSetUsers(users)\n    })\n    .catch( () => {\n      actionSetUsers(null)\n    });\n  }, [])\n  \n  console.log(userList);\n\n  return  <React.Fragment>\n            <h2>Users</h2>\n\n            { userList &&\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Email</th>\n                  </tr>\n                </thead>\n                <tbody>\n                { userList.map((item) => (\n                  <tr key={item.id}>\n                    <td>\n                      <Link to={`/user/${item.id}`}>\n                        {item.name}\n                      </Link>\n                    </td>\n                    \n                    <td>{item.email}</td>\n                  </tr>\n                ))}\n                </tbody>\n              </table>\n            }\n\n            {userList === null &&  <div>Request Error</div>}\n          </React.Fragment>\n  \n}\nexport default UserList;","import React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { setUser } from \"./store\";\n\n\nconst UserInfo = () => {\n  const userInfo = useSelector((state) => state.userList.user)\n  const dispatch = useDispatch()\n  const actionSetUser = (users) => dispatch(setUser(users))\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (id) {\n      fetch(`https://jsonplaceholder.typicode.com/users/${id}`)\n      .then( (user) => {\n        return user.json()\n      })\n      .then( (user) => {\n        actionSetUser(user)\n      })\n      .catch( () => {\n        actionSetUser(null)\n      });  \n    }\n  }, [])\n\n  return <React.Fragment>\n            <h2>User Info</h2>\n\n            {userInfo && \n              <ul className=\"list-group\">\n                <li className=\"list-group-item\">name: {userInfo.name}</li>\n                <li className=\"list-group-item\">userName: {userInfo.username}</li>\n                <li className=\"list-group-item\">address: {userInfo.address.city}, {userInfo.address.street}</li>\n                <li className=\"list-group-item\">company: {userInfo.company.name}</li>\n              </ul>\n            }\n            {userInfo === null &&  <div>Request Error</div>}\n          </React.Fragment>;\n}\n\nexport default UserInfo;","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport UserList from \"./UserList\";\nimport UserInfo from \"./UserInfo\";\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/\" exact={true}>\n              <UserList />\n            </Route>\n            <Route path=\"/user/:id\">\n              <UserInfo />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}